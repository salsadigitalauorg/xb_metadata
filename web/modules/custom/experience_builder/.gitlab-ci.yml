################
# DrupalCI GitLabCI template
#
# Gitlab-ci.yml to replicate DrupalCI testing for Contrib
#
# With thanks to:
#   * The GitLab Acceleration Initiative participants
#   * DrupalSpoons
################

################
# Guidelines
#
# This template is designed to give any Contrib maintainer everything they need to test, without requiring modification. It is also designed to keep up to date with Core Development automatically through the use of include files that can be centrally maintained.
#
# However, you can modify this template if you have additional needs for your project.
################

################
# Includes
#
# Additional configuration can be provided through includes.
# One advantage of include files is that if they are updated upstream, the changes affect all pipelines using that include.
#
# Includes can be overridden by re-declaring anything provided in an include, here in gitlab-ci.yml
# https://docs.gitlab.com/ee/ci/yaml/includes.html#override-included-configuration-values
################

include:
  ################
  # DrupalCI includes:
  # As long as you include this, any future includes added by the Drupal Association will be accessible to your pipelines automatically.
  # View these include files at https://git.drupalcode.org/project/gitlab_templates/
  ################
  - project: $_GITLAB_TEMPLATES_REPO
    # "ref" value can be:
    # - Recommended (default) - `ref: $_GITLAB_TEMPLATES_REF` - The Drupal Association will update this value to the recommended tag for contrib.
    # - Latest - `ref: main` - Get the latest additions and bug fixes as they are merged into the templates.
    # - Minor or Major latests - `ref: 1.x-latest` or `ref: 1.0.x-latest` - Get the latest additions within a minor (mostly bugfixes) or major (bugs and new features).
    # - Fixed tag - `ref: 1.0.1` - Set the value to a known tag. This will not get any updates.
    # If you change the default value of ref, you should set the _CURL_TEMPLATES_REF variable in the variables section to be the same as set here.
    ref: $_GITLAB_TEMPLATES_REF
    file:
      - "/includes/include.drupalci.main.yml"
      # For Drupal 7, remove the above line and uncomment the below.
      # - "/includes/include.drupalci.main-d7.yml"
      - "/includes/include.drupalci.variables.yml"
      - "/includes/include.drupalci.workflows.yml"
  # Local includes
  - local: .gitlab/ci/drupal.yml
  - local: .gitlab/ci/test.yml

stages:
  - development
  - build
  - validate
  - test
  - publish

#
################
# Pipeline configuration variables
#
# These are the variables provided to the Run Pipeline form that a user may want to override.
#
# Docs at https://git.drupalcode.org/project/gitlab_templates/-/blob/main/includes/include.drupalci.variables.yml
################
variables:
  # Opt in to testing Drupal 11.2.
  # @todo Remove when 11.2 is the default in the GitLab CI template.
  CORE_STABLE: '11.2.2'

  # Show env variables always to help with debugging.
  _SHOW_ENVIRONMENT_VARIABLES: 1
  # Ignore that `ext-sodium` is not available in the CI environment.
  # It's required by a dependency of `drupal/simple_oauth`, but it doesn't cause any issues with what
  # `drupal/simple_oauth` does.
  # See https://git.drupalcode.org/project/simple_oauth/-/blob/6.0.x/.gitlab-ci.yml
  COMPOSER_IGNORE_PLATFORM_REQS: ext-sodium
  # Needed to allow this to run locally.
  # https://project.pages.drupalcode.org/gitlab_templates/info/test-locally/
  DRUPALORG_CI_SERVER_URL: https://git.drupalcode.org
  # Set this as CI_PROJECT_NAME changes on forks.
  CI_PARENT_PROJECT_NAME: experience_builder
  PHPUNIT_FAIL_ON_PHPUNIT_DEPRECATION: 0
  _CONCURRENCY_THREADS: '12'

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.is-push-rule: &is-push-rule
  if: $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_ROOT_NAMESPACE == "project"

.manual-rule: &manual-rule
  - when: manual
    allow_failure: true

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.php-files-change-rule: &php-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      - "**/*.{php,module,inc,install,theme,profile}"
    when: on_success

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.css-files-change-rule: &css-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      - "**/*.css"
    when: on_success

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.module-metadata-files-change-rule: &module-metadata-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      - "**/*.yml"
    when: on_success

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.module-config-files-change-rule: &module-config-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      # config schema and/or default config
      - config
    when: on_success

# @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
.SDC-files-change-rule: &SDC-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      - components
      - schema.json
      - "**/*.twig"
    when: on_success

.ui-fixture-files-change-rule: &UI-fixtures-files-change-rule
  - if: $_FOR_EVERY_MR_COMMIT == "true" || $_FOR_EVERY_MR_COMMIT == null
    changes:
      - ui/tests/fixtures/**/*
    when: on_success

# Disable jobs from the upstream template.
phpcs:
  rules:
    - when: never

phpstan:
  rules:
    - when: never

cspell:
  rules:
    - when: never

composer-lint:
  rules:
    - when: never

phpcs-rules-match-drupal-11:
  stage: development
  script:
    - |
      # Download the file from the Drupal repository
      curl -o drupal_core_phpcs.xml.dist https://git.drupalcode.org/project/drupal/-/raw/11.x/core/phpcs.xml.dist?ref_type=heads

      # Check if the download was successful
      if [ $? -ne 0 ]; then
        echo "🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥"
        echo "Error: Failed to download $DRUPAL_URL"
        exit 1
      fi

      # Compare the downloaded file with the local file using a subshell to prevent premature exit
      echo "Comparing downloaded file with local file..."
      # With uses the braces the job just ends here for some reason.
       {
        diff drupal_core_phpcs.xml.dist core.phpcs.xml.dist
        DIFF_EXIT_CODE=$?
      } || true

      if [ $DIFF_EXIT_CODE -ne 0 ]; then
        echo "🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥"
        echo "Error: core.phpcs.xml.dist not up to date with Drupal 11.x core/phpcs.xml.dist. Please create an issue to update this file."
        echo "Issue template: https://www.drupal.org/node/add/project-issue/experience_builder?title=Update%20PHPCS%20config%20to%20match%20Drupal%2011&field_issue_parent=3512890&clone_body=1&categories=2&priorities=100&status=1&version=0.x-dev&component=Code&assigned=0&tags="
      else
        echo "👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍👍"
        echo "core.phpcs.xml.dist is up to date with Drupal 11.x core/phpcs.xml.dist"
      fi

      # Exit with the exit code of the diff command
      exit $DIFF_EXIT_CODE
  # Allow this to fail, to avoid disrupting XB's CI when upstream changes.
  allow_failure: true
stylelint:
  allow_failure: false
  # @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
  rules:
    - *is-push-rule
    - *css-files-change-rule
    - *manual-rule
  # @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3492697 lands.
  script:
    - cd $_WEB_ROOT/core && corepack enable && yarn add @gitlab-formatters/stylelint-formatter-gitlab
    - cd $CI_PROJECT_DIR/$_WEB_ROOT/modules/custom/$CI_PROJECT_NAME
    - echo "Stylelint version $(${CI_PROJECT_DIR}/${_WEB_ROOT}/core/node_modules/.bin/stylelint --version)"
    - $CI_PROJECT_DIR/$_WEB_ROOT/core/node_modules/.bin/stylelint --ignore-path ./.stylelintignore --config $CI_PROJECT_DIR/$_WEB_ROOT/core/.stylelintrc.json ./**/*.css --formatter verbose --color $_STYLELINT_EXTRA || true
    - $CI_PROJECT_DIR/$_WEB_ROOT/core/node_modules/.bin/stylelint --ignore-path ./.stylelintignore --config $CI_PROJECT_DIR/$_WEB_ROOT/core/.stylelintrc.json ./**/*.css --custom-formatter=@gitlab-formatters/stylelint-formatter-gitlab --output-file=$CI_PROJECT_DIR/gl-codequality.json $_STYLELINT_EXTRA
  artifacts:
    paths:
      - gl-codequality.json
    reports:
      codequality: gl-codequality.json

phpunit:
  variables:
    # Note: XB uses `@group #slow` to start slow tests early. The threshold is (at the time of writing) ~60 seconds.
    _PHPUNIT_CONCURRENT: 1
  needs:
    - composer
    - UI
  before_script:
    # ⚠️ Since Drupal 11.2 this is necessary to avoid PHPUnit tests taking painfully long.
    # @see https://www.drupal.org/project/drupal/issues/3249443
    - rm -rf ui/node_modules && echo "🧹 clean up node modules"
  parallel:
    # @see https://www.drupal.org/node/3444548
    matrix:
      - _TARGET_DB_TYPE: sqlite
        _TARGET_DB_VERSION: '3'
        # @see https://git.drupalcode.org/project/drupal/-/commit/10466dba9d7322ed55165dd9224edb2153c9b27a
        _TARGET_PHP: '8.3-ubuntu'
        _FOR_EVERY_MR_COMMIT: 'true'
      - _TARGET_DB_TYPE: 'mariadb'
        _TARGET_DB_VERSION: '10.6'
        _FOR_EVERY_MR_COMMIT: 'false'
      - _TARGET_DB_TYPE: 'mysql'
        # @todo Delete this when https://www.drupal.org/project/gitlab_templates/issues/3447105 lands.
        _TARGET_DB_VERSION: '8'
        _FOR_EVERY_MR_COMMIT: 'false'
      - _TARGET_DB_TYPE: 'pgsql'
        _TARGET_DB_VERSION: '16'
        _FOR_EVERY_MR_COMMIT: 'false'
  # @todo Delete this after https://www.drupal.org/project/gitlab_templates/issues/3447792 lands.
  # @see https://git.drupalcode.org/issue/gitlab_templates-3447792/-/compare/main...3447792-raise-sqlite-version?from_project_id=96292, when 984abb7b4781559a13078d58bb65f6959fe42179 was the last commit.
  image:
    name: $_CONFIG_DOCKERHUB_ROOT/php-$PHP_VERSION-ubuntu-apache:$_TARGET_PHP_IMAGE_TAG
  # @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
  rules:
    - *is-push-rule
    - *php-files-change-rule
    - *module-metadata-files-change-rule
    - *module-config-files-change-rule
    - *SDC-files-change-rule
    - *UI-fixtures-files-change-rule
    - *manual-rule

eslint:
  # This module wants to strictly comply with eslint.
  allow_failure: false
  before_script:
    # 🤷‍.eslintignore already instructs eslint to ignore this, but it does not seem to work. This is validated by the `UI eslint` job below.
    - rm -rf ui
    - rm -rf tests/src/Playwright playwright.config.ts eslint.config.mjs
  # @todo Remove when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
  rules:
    - *is-push-rule
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .prettier*
        - "**/*.js"
        - "**/*.yml"
    - *manual-rule

UI:
  stage: build
  image: node:20-alpine
  needs: []
  script:
    - cd ui
    - npm ci
    # Verify building the entire app succeeds — this first runs the TypeScript Compiler.
    - npm run build
    # @todo In the future, when `ui/dist` and `ui/lib/astro-hydration/dist` are
    # committed, verify here that they match.
  artifacts:
    paths:
      - ui/dist
      - ui/lib/astro-hydration/dist
      # TRICKY: necessary for the `Cypress` job to be able to run `cypress install`.
      - ui/node_modules

UI eslint:
  stage: validate
  image: node:20-alpine
  allow_failure: false
  needs:
    - UI
  # @todo Refine when https://www.drupal.org/project/gitlab_templates/issues/3452183 lands.
  rules:
    - *is-push-rule
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ui/package.json
        - ui/**/*.js
        - ui/**/*.ts
        - ui/**/*.tsx
        - ui/tsconfig.json
        - ui/tsconfig.node.json
    - *manual-rule
  script:
    - cd ui
    - node_modules/.bin/eslint . --format=junit --output-file=$CI_PROJECT_DIR/ui-eslint-junit.xml --max-warnings=0
  artifacts:
    expose_as: junit
    expire_in: 6 mos
    when: always
    name: artifacts-$CI_PIPELINE_ID-$CI_JOB_NAME_SLUG
    paths:
      - ui-eslint-junit.xml
    reports:
      junit: ui-eslint-junit.xml

vitest:
  stage: test
  image: node:20-alpine
  allow_failure: false
  needs:
    - UI
  rules:
    - *is-push-rule
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ui/src/**/*
        - ui/tsconfig.json
        - ui/tsconfig.node.json
        - ui/tests/vitest/**/*
    - *UI-fixtures-files-change-rule
    - *manual-rule
  script:
    - cd ui
    - npm test -- --reporter=junit --outputFile=$CI_PROJECT_DIR/ui-vitest-junit.xml
  artifacts:
    expose_as: junit
    expire_in: 6 mos
    when: always
    name: artifacts-$CI_PIPELINE_ID-$CI_JOB_NAME_SLUG
    paths:
      - ui-vitest-junit.xml
    reports:
      junit: ui-vitest-junit.xml

.cypress-base:
  stage: test
  needs:
    - composer
    - UI
  extends:
    - .test-variables
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:Cypress-deps[collapsed=true]\r\e[0KInstall Cypress dependencies."
    - sudo apt-get -y update
    - sudo apt-get -y install libgtk2.0-0t64 libgtk-3-0t64 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb alsa-utils pulseaudio
    - echo "pcm.!default { type pulse }" > ~/.asoundrc
    - echo "ctl.!default { type pulse }" >> ~/.asoundrc
    - pulseaudio --system --disallow-exit --disallow-module-loading &
    - echo -e "\e[0Ksection_end:`date +%s`:Cypress-deps\r\e[0K"
    #
    # Copied from `.nightwatch-base`, but converted to use GitLab CI references.
    # 👇
    #
    - !reference [ .setup-webserver ]
    - !reference [ .simpletest-db ]
    - export DRUPAL_TEST_DB_URL=$SIMPLETEST_DB
    - !reference [ .show-environment-variables ]
    - cd $_WEB_ROOT
    #
    # 👆
    #
    - cd modules/custom/$CI_PROJECT_NAME
    - echo -e "\e[0Ksection_start:`date +%s`:Cypress-install[collapsed=true]\r\e[0KInstall Cypress."
    - cp ./ui/.env.example ./ui/.env
    - echo "BASE_URL='${SIMPLETEST_BASE_URL}'" >> ./ui/.env
    - echo "DB_URL='${DRUPAL_TEST_DB_URL}'" >> ./ui/.env
    - echo "DRUPAL_TEST_WEBSERVER_USER=www-data" >> ./ui/.env
    - echo "DRUPAL_ROOT_CORE='${CI_PROJECT_DIR}/${_WEB_ROOT}/core'" >> ./ui/.env
    - cd ./ui/
    - cat .env
    - mkdir -p ./cycache /var/www/.npm /home/apache/.cache/fontconfig ~/.cache /usr/share/fonts/ /var/cache/fontconfig
    - chown -R www-data:www-data ./cycache /var/www/.npm /usr/bin/npm /home/apache/.cache/fontconfig ~/.cache /usr/share/fonts/ /var/cache/fontconfig
    - chmod -R 755 ./cycache
    - sudo -u www-data CYPRESS_CACHE_FOLDER=./cycache node ./node_modules/.bin/cypress install
    - echo -e "\e[0Ksection_end:`date +%s`:Cypress-install\r\e[0K"
    - sudo -u www-data CYPRESS_CACHE_FOLDER=./cycache node ./node_modules/.bin/cypress --version
  variables:
    _TARGET_DB_TYPE: sqlite
  artifacts:
    when: always
    expire_in: 6 mos
    paths:
      - ui/tests/screenshots/**/*.png
    reports:
      junit:
        - ui/junit-*.xml

cypress E2E:
  extends: .cypress-base
  parallel: 4
  script:
    - CYPRESS_CACHE_FOLDER=./cycache node ./node_modules/.bin/cypress run --browser electron --reporter junit --reporter-options "mochaFile=junit-[hash].xml" --spec=`node ./tests/support/parallel.js`

cypress unit:
  extends: .cypress-base
  script:
    - CYPRESS_CACHE_FOLDER=./cycache node ./node_modules/.bin/cypress run --component --browser electron --reporter junit --reporter-options "mochaFile=junit-[hash].xml"
  rules:
    - *is-push-rule
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ui/src/**/*
        - ui/tsconfig.json
        - ui/tsconfig.node.json
        - ui/tests/unit/**/*
    - *UI-fixtures-files-change-rule
    - *manual-rule

🗺️ C4 model diagrams:
  stage: validate
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - docs/XB.dsl
        - docs/diagrams/*
  image:
    name: structurizr/cli
    entrypoint: [""]
  script:
    - /usr/local/structurizr-cli/structurizr.sh export --workspace docs/XB.dsl --format mermaid --output $CI_PROJECT_DIR/docs/diagrams
    # Prepend the prefix
    #   ```mermaid
    # and the
    #   ```
    # suffix that GitLab CI expects.
    # @see https://docs.gitlab.com/ee/user/markdown.html#mermaid
    # @see https://stackoverflow.com/a/42989868
    # @see https://stackoverflow.com/a/9741470
    - for file in docs/diagrams/*.mmd; do printf "\`\`\`mermaid\n" | cat - $file  > temp && mv -f temp $file && echo $'\n```' >> $file; done
    # Now the actual validation: verify that regenerating the Mermaid Markdown files did NOT trigger any changes.
    - set -e; for file in docs/diagrams/*.mmd; do diff $file docs/diagrams/$(basename $file mmd)md; done
  artifacts:
    paths:
      - "docs/diagrams/*.md"

lint (php):
  stage: validate
  needs: []
  image: justafish/drupalci-environments-playwright:latest
  variables:
    GIT_DEPTH: 1
    COMPOSER_ROOT_VERSION: 0.0.0
  before_script:
    - !reference [ .drupal-files ]
    - composer run install-dev-deps
    - mkdir -p test-results
  script:
    # PHPStan doesn't allow multiple outputs, but it will cache the result so
    # the second run is very fast.
    - composer run phpstan -- --error-format=junit > test-results/phpstan.xml || true
    - !reference [ .test_runner ]
    - run_test "composer validate" "composer validate --strict"
    - run_test "phpcs" "composer run phpcs"
    - run_test "phpstan" "composer run phpstan"
    - !reference [ .test_summary ]
  after_script:
    - cp -R _drupal/web/modules/contrib/$CI_PARENT_PROJECT_NAME/test-results $CI_PROJECT_DIR/test-results
  artifacts:
    expose_as: 'Static tests report'
    when: always
    expire_in: 6 mos
    paths:
      - test-results/
    reports:
      junit:
        - test-results/phpcs.xml
        - test-results/phpstan.xml

# This is the lint job for packages that are under the root package.json and
# workspace.
# @todo migrate the ui/ packages to the top level workspace now that we can get
# around the GitLab issues.
lint (node):
  stage: validate
  needs: []
  image: justafish/drupalci-environments-playwright:latest
  before_script:
    - . /root/.nvm/nvm.sh && nvm install 24 && nvm alias default 24
  script:
    - npm ci
    - npm run lint

playwright:
  stage: test
  needs: []
  image: justafish/drupalci-environments-playwright:latest
  # This doesn't actually work 🤦‍♀️
  # https://www.drupal.org/project/infrastructure/issues/3387117
  cache:
    key: cache-$CI_JOB_NAME-$CI_COMMIT_REF_SLUG
    fallback_keys:
      - cache-$CI_JOB_NAME-$CI_DEFAULT_BRANCH
      - cache-$CI_JOB_NAME-default
    paths:
      - /root/.composer/cache
      - /root/.npm
      - /root/.cache/ms-playwright/ms-playwright
      - $CI_PROJECT_DIR/_drupal/web/modules/contrib/$CI_PARENT_PROJECT_NAME/node_modules
      - $CI_PROJECT_DIR/_drupal/web/modules/contrib/$CI_PARENT_PROJECT_NAME/ui/node_modules
  extends:
    - .test-variables
  variables:
    GIT_DEPTH: 1
    _TARGET_DB_TYPE: sqlite
    DRUPAL_TEST_BASE_URL: http://localhost
    DRUPAL_TEST_WEBSERVER_USER: www-data
    DRUPAL_TEST_PLAYWRIGHT_SKIP_TEARDOWN: true
  before_script:
    - !reference [ .drupal ]
    - composer run install-dev-deps
  script:
    - npm ci
    - npm run test:playwright
  after_script:
    - mkdir -p $CI_PROJECT_DIR/logs
    - cp -R /var/log/apache2 $CI_PROJECT_DIR/logs/apache2
    - cp -R /var/log/supervisor $CI_PROJECT_DIR/logs/supervisor
    - cp -R _drupal/web/modules/contrib/$CI_PARENT_PROJECT_NAME/test-results $CI_PROJECT_DIR/test-results
    - cp -R _drupal/web/modules/contrib/$CI_PARENT_PROJECT_NAME/playwright-report $CI_PROJECT_DIR/playwright-report
  artifacts:
    expose_as: 'Playwright Test Reports'
    when: always
    expire_in: 6 mos
    paths:
      - playwright-report/
      - test-results/
      - logs/
    reports:
      junit:
        - test-results/playwright.xml

CLI Test:
  stage: test
  image: node:20-alpine
  needs: []
  rules:
    - changes:
        - "cli/**/*"
        - package.json
        - package-lock.json
        - openapi.yml
        - src/Entity/JavaScriptComponent.php
        - src/Controller/ApiConfigControllers.php
        - .gitlab-ci.yml
    - if: '$CI_COMMIT_TAG =~ /^cli-\d+\.\d+\.\d+(-\w+\d*)?$/'
  before_script:
    mkdir -p test-results
  # This job must pass, but must also not disrupt XB's CI if dependencies have a security vulnerability.
  allow_failure:
    exit_codes:
      # `npm audit …` fails (implies upstream security vulnerability that may or may not affect XB)
      - 100
  script:
    - npm ci
    - npm run test --workspace=cli
    - npm run build --workspace=cli
    - npm version 0.0.1 --workspace=cli
    - npm pack --pack-destination=test-results --workspace=cli
    - npm audit --audit-level=moderate --production || exit 100
  artifacts:
    expose_as: 'CLI package'
    when: always
    expire_in: 6 mos
    paths:
      - test-results/

CLI Publish:
  stage: publish
  image: node:20-alpine
  needs:
    - lint (node)
    - CLI Test
  rules:
    - if: '$CI_COMMIT_TAG =~ /^cli-\d+\.\d+\.\d+(-\w+\d*)?$/'
  before_script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
  script:
    - npm ci
    - npm run build --workspace=cli
    - npm version $(echo ${CI_COMMIT_TAG} | cut -c5-) --workspace=cli
    - npm publish --access public --workspace=cli

# User facing documentation.
pages-mr:
  image: node:22
  stage: publish
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "docs/user/**/*"
  variables:
    ASTRO_SITE: https://$CI_PAGES_HOSTNAME
    ASTRO_BASE: /$CI_PROJECT_NAME/mr-$CI_MERGE_REQUEST_IID/
  script:
    - npm ci
    - npm run build --workspace=docs
  pages:
    publish: docs/user/dist
    path_prefix: "mr-$CI_MERGE_REQUEST_IID"
    expire_in: 1 month
  environment:
    name: pages/mr-$CI_MERGE_REQUEST_IID
    url: $CI_PAGES_URL
    on_stop: stop-pages-mr

stop-pages-mr:
  stage: publish
  needs: []
  rules:
    # Branch merge.
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_MERGE_REQUEST_IID
      changes:
        - "docs/user/**/*"
    # Branch deletion.
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BEFORE_SHA != "0000000000000000000000000000000000000000" && $CI_COMMIT_SHA == "0000000000000000000000000000000000000000"
      changes:
        - "docs/user/**/*"
  script:
    - echo "Stopping pages deployment for MR $CI_MERGE_REQUEST_IID"
  environment:
    name: pages/mr-$CI_MERGE_REQUEST_IID
    action: stop

pages-publish:
  image: node:22
  stage: publish
  needs: []
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - "docs/user/**/*"
  variables:
    ASTRO_SITE: https://$CI_PAGES_HOSTNAME
    ASTRO_BASE: /$CI_PROJECT_NAME/
  script:
    - npm ci
    - npm run build --workspace=docs
  pages:
    publish: docs/user/dist
