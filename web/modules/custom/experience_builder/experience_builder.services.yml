services:
  _defaults:
    autoconfigure: true
    autowire: true
  Drupal\experience_builder\Audit\ComponentAudit:
    public: true
  Drupal\experience_builder\ShapeMatcher\JsonSchemaFieldInstanceMatcher:
    public: true
    arguments:
      $constraintManager: '@validation.constraint'
      $cache: '@cache.static'
  Drupal\experience_builder\ShapeMatcher\FieldForComponentSuggester:
    public: true
  Drupal\experience_builder\ComponentIncompatibilityReasonRepository: {}
  Drupal\experience_builder\JsonSchemaDefinitionsStreamwrapper:
    public: true
    tags:
      - { name: stream_wrapper, scheme: json-schema-definitions }
  Drupal\experience_builder\Plugin\AdapterManager:
    parent: default_plugin_manager
  Drupal\experience_builder\ComponentDependencyUninstallValidator:
    public: true
    tags:
      - { name: module_install.uninstall_validator }
  xb_template_renderer:
    class: Drupal\experience_builder\Render\MainContent\XBTemplateRenderer
    arguments:
      $cssCollectionRenderer: '@asset.css.collection_renderer'
      $jsCollectionRenderer: '@asset.js.collection_renderer'
    tags:
      - { name: render.main_content_renderer, format: xb_template }
  Drupal\experience_builder\Render\MainContent\XBPreviewRenderer: { }
  Drupal\experience_builder\Plugin\ComponentPluginManager:
    decorates: plugin.manager.sdc
    parent: Drupal\Core\Theme\ComponentPluginManager
    arguments: ['@entity_type.manager', '@Drupal\experience_builder\ComponentIncompatibilityReasonRepository']
    tags:
      - { name: experience_builder.component_source }
  Drupal\experience_builder\Plugin\BlockManager:
    decorates: plugin.manager.block
    parent: Drupal\Core\Block\BlockManagerInterface
    arguments: ['@config.typed', '@Drupal\experience_builder\ComponentIncompatibilityReasonRepository', '@Drupal\experience_builder\ComponentSource\ComponentSourceManager']
    tags:
      - { name: experience_builder.component_source }
  Drupal\experience_builder\ComponentSource\ComponentSourceManager:
    parent: default_plugin_manager
    public: true
  # Utilities.
  Drupal\experience_builder\AssetRenderer: {}
  logger.channel.experience_builder:
    parent: logger.channel_base
    arguments: ['experience_builder']
  asset.resolver.experience_builder:
    public: false
    class: \Drupal\experience_builder\Asset\AssetResolver
    decorates: asset.resolver
    arguments: ['@asset.resolver.experience_builder.inner', '@library.discovery', '@library.dependency_resolver', '@module_handler', '@theme.manager', '@language_manager', '@cache.data', '@theme_handler']
  Drupal\experience_builder\ClientDataToEntityConverter: {}
  Drupal\experience_builder\AutoSave\AutoSaveManager: {}
  Drupal\experience_builder\AutoSave\AutoSaveTempStoreFactory:
    parent: tempstore.shared
  Drupal\experience_builder\Storage\ComponentTreeLoader: {}
  Drupal\experience_builder\CodeComponentDataProvider: {}
  Drupal\experience_builder\Version: {}

  # Event subscribers.
  experience_builder.openapi.http_request_validator.subscriber:
    class: Drupal\experience_builder\EventSubscriber\ApiRequestValidator
    arguments:
      $logger: '@logger.channel.experience_builder'
      $appRoot: '%app.root%'
    calls:
      - [setValidatorBuilder, []]
    tags:
      - { name: event_subscriber }
  experience_builder.openapi.http_response_validator.subscriber:
    class: Drupal\experience_builder\EventSubscriber\ApiResponseValidator
    arguments:
      $logger: '@logger.channel.experience_builder'
      $appRoot: '%app.root%'
    calls:
      - [setValidatorBuilder, []]
    tags:
      - { name: event_subscriber }
  experience_builder.route_options.subscriber:
    class: Drupal\experience_builder\EventSubscriber\XbRouteOptionsEventSubscriber
    tags:
      - { name: 'event_subscriber' }
  experience_builder.image_style.route_alter:
    class: Drupal\experience_builder\EventSubscriber\ImageStyleRoutesEventSubscriber
    tags:
      - { name: event_subscriber }
  Drupal\experience_builder\EventSubscriber\PreviewEnvelopeViewSubscriber: {}
  experience_builder.theme_negotiator.xb:
    class: Drupal\experience_builder\Theme\XBThemeNegotiator
    tags:
      # Set priority to 1001 so it is above AjaxBasePageNegotiator (1000).
      - { name: theme_negotiator, priority: 1001 }
  Drupal\experience_builder\EventSubscriber\PageVariantSelectorSubscriber: ~
  Drupal\experience_builder\EventSubscriber\ApiExceptionSubscriber: ~
  Drupal\experience_builder\PathProcessor\ExperienceBuilderPathProcessor:
    tags:
      - { name: path_processor_inbound, priority: 200 }
  Drupal\experience_builder\Controller\XbBlockListController: ~
  Drupal\experience_builder\EventSubscriber\RecipeSubscriber:
    tags:
      - { name: service_collector, call: addComponentSource, tag: experience_builder.component_source }

  # Routing.
  Drupal\experience_builder\Entity\Routing\XbHtmlRouteEnhancer:
    tags:
      - { name: route_enhancer }
  Drupal\experience_builder\Routing\ParametrizedImageStyleConverter:
    tags:
      - { name: paramconverter }

  # Access.
  Drupal\experience_builder\Access\XbHttpApiEligibleConfigEntityAccessCheck:
    tags:
      - { name: access_check, applies_to: _xb_http_eligible_config_entity }
  Drupal\experience_builder\Access\XbEntityCreateAccessCheck:
    tags:
      - { name: access_check, applies_to: _xb_entity_create_access }
  Drupal\experience_builder\Access\ComponentTreeEditAccessCheck:
    tags:
      - { name: access_check, applies_to: _xb_component_tree_edit_access }
  Drupal\experience_builder\Access\XbUiAccessCheck:
    tags:
      - { name: access_check, applies_to: _xb_ui_access }

  # Twig.
  Drupal\experience_builder\Extension\XbTwigExtension:
    tags:
      - { name: twig.extension }

  # Controllers.
  Drupal\experience_builder\Controller\ApiConfigControllers: ~
  Drupal\experience_builder\Controller\ApiConfigAutoSaveControllers: ~
  Drupal\experience_builder\Controller\ApiLayoutController: {}
  Drupal\experience_builder\Controller\ApiLogController: {}
  Drupal\experience_builder\Controller\ApiContentUpdateForDemoController: {}
  Drupal\experience_builder\Controller\ApiContentControllers: {}
  Drupal\experience_builder\Controller\ApiStagedConfigUpdateAutoSaveController: {}
  Drupal\experience_builder\Controller\ComponentStatusController: {}
  Drupal\experience_builder\Controller\ComponentAuditController: {}
  Drupal\experience_builder\Controller\ExperienceBuilderController: {}
  Drupal\experience_builder\Controller\ApiAutoSaveController: {}

  # Decorators.
  Drupal\experience_builder\Render\ImportMapResponseAttachmentsProcessor:
    public: false
    decorates: html_response.attachments_processor
    # We want to go before any other decorators (e.g. bigpipe) so we can
    # remove 'import_maps' as this is not supported by other attachment
    # processors
    decoration_priority: -100
    arguments: ['@.inner']
  Drupal\experience_builder\Messenger:
    public: true
    decorates: messenger
    # We don't want any other module to display messages
    decoration_priority: -100
    arguments: ['@.inner']
