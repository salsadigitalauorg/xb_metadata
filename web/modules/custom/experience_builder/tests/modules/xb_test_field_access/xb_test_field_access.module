<?php

declare(strict_types=1);

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\experience_builder\Entity\Page;

/**
 * Implements hook_entity_field_access().
 */
function xb_test_field_access_entity_field_access(string $operation, FieldDefinitionInterface $field_definition, AccountInterface $account, ?FieldItemListInterface $items = NULL): AccessResultInterface {
  if ($field_definition->getTargetEntityTypeId() === Page::ENTITY_TYPE_ID
      && $field_definition->getName() == 'components'
      && $operation == 'edit'
  ) {
    return AccessResult::forbiddenIf(
      condition: !$account->hasPermission('edit xb page components'),
      reason: 'You do not have permission to edit this field.'
    )->cachePerPermissions();
  }
  if ($field_definition->getTargetEntityTypeId() === 'node'
    && $field_definition->getName() == 'title'
    && $operation == 'edit'
  ) {
    return AccessResult::forbiddenIf(
      condition: !$account->hasPermission('edit xb page components'),
      reason: 'You do not have permission to edit this field.'
    )->cachePerPermissions();
  }

  return AccessResult::neutral();
}
